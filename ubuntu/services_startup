#!/bin/sh
###
### /etc/init.d/services_startup - Production Services Startup Script
###

# chkconfig: 2345 99 01
# description: Production Services Startup Script

# description: Services_startup is a custom process which handles starting \
#              and stopping of the local services on behalf of the service \
#              user by making a call to the boot or shutdown script in the \
#              service user's ~/svc_hooks directory

### BEGIN INIT INFO
# Provides: services_startup
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Should-Start:         $syslog
# Should-Stop:          $syslog
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description: Start/Stop service user's local services
# Description: Services_startup is a custom process which handles starting
#              and stopping of the local services on behalf of the service
#              user by making a call to the boot or shutdown script in the
#              service user's ~/svc_hooks directory
### END INIT INFO


SVC_USER="bamboo";
HOOK_DIR="/services/${SVC_USER}/svc_hooks"
LOCKFILE=/var/lock/subsys/services_startup
RETVAL=0
STOP_TIMEOUT=10

start() {
   echo -n $"Starting $SVC_USER services: "
   [ -f "$LOCKFILE" ] && return 1
   /bin/su $SVC_USER -c $HOOK_DIR/boot >> /dev/null
   RETVAL=$?
   #echo
   [ $RETVAL = 0 ] && touch $LOCKFILE
   return $RETVAL
}


stop() {
   echo -n $"Stopping $SVC_USER services: "
   [ -f "$LOCKFILE" ] || return 1
   /bin/su $SVC_USER -c $HOOK_DIR/shutdown >> /dev/null
   RETVAL=$?
   #echo
   [ $RETVAL = 0 ] && rm -f $LOCKFILE
   return $RETVAL
}
 
 
status() {
       if [ -f "$LOCKFILE" ]; then
           echo "$SVC_USER services are running"
       else
           echo "$SVC_USER services are stopped"
       fi
       exit 0
}


# See how we were called.
case "$1" in
 start)
       start
        if [ $RETVAL = 0 ]; then
                echo -n OK
        else
                echo -n FAILED
        fi
       echo
       ;;
 stop)
       stop
        if [ $RETVAL = 0 ]; then
                echo -n OK
        else
                echo -n FAILED
        fi
       echo
       ;;

 status)
       status
       ;;

 restart)
       stop
       start
       ;;

 *)
       echo $"Usage: $prog {start|stop|restart|status}"
       RETVAL=2
esac

exit $RETVAL
